tinymce.PluginManager.add('stoichiometry', function (editor, url) {
  // POST button - Save stoichiometry
  editor.ui.registry.addButton('stoichiometry', {
    tooltip: 'Save Stoichiometry (POST)',
    icon: 'save',
    onAction: function () {
      // Get the selected chemical element
      const selectedNode = editor.selection.getNode();
      let chemId = 1; // Default to 1 as specified in the requirements
      
      // If a chemical element is selected, use its ID
      if ($(selectedNode).hasClass("chem")) {
        chemId = selectedNode.getAttribute("id");
      }
      
      // Create a dialog to display the stoichiometry information
      const dialogConfig = {
        title: 'Save Stoichiometry Information (POST)',
        body: {
          type: 'panel',
          items: [
            {
              type: 'htmlpanel',
              html: '<div id="stoichiometry-dialog-content">Loading stoichiometry data...</div>'
            }
          ]
        },
        buttons: [
          {
            type: 'cancel',
            text: 'Close'
          }
        ],
        width: 600,
        height: 400
      };
      
      // Open the dialog
      const dialog = editor.windowManager.open(dialogConfig);
      
      // Make the POST request to get stoichiometry data
      $.ajax({
        url: '/chemical/stoichiometry',
        type: 'POST',
        data: { chemId: "1" },
        success: function(response) {
          if (response.error) {
            $('#stoichiometry-dialog-content').html('<div class="error">Error: ' + response.error + '</div>');
            return;
          }
          
          // Format the response data
          let html = '<div class="stoichiometry-container">';
          
          if (response.data) {
            const stoichiometry = response.data;
            
            // Add header information
            html += '<h3>Stoichiometry Information (POST)</h3>';
            
            // Add reactants section
            if (stoichiometry.molecules && stoichiometry.molecules.length > 0) {
              html += '<div class="section"><h4>Molecules</h4><table class="stoichiometry-table">';
              html += '<tr><th>Compound</th><th>Role</th><th>Coefficient</th><th>Molecular Mass</th><th>Absolute Mass</th></tr>';
              
              stoichiometry.molecules.forEach(function(molecule) {
                html += '<tr>';
                html += '<td>' + (molecule.compound || '') + '</td>';
                html += '<td>' + (molecule.role || '') + '</td>';
                html += '<td>' + (molecule.coefficient || '') + '</td>';
                html += '<td>' + (molecule.molecularMass || '') + '</td>';
                html += '<td>' + (molecule.absoluteMass || '') + '</td>';
                html += '</tr>';
              });
              
              html += '</table></div>';
            }
          }
          
          html += '</div>';
          
          // Update the dialog content
          $('#stoichiometry-dialog-content').html(html);
          
          // Add some basic styling
          $('#stoichiometry-dialog-content').append(`
            <style>
              .stoichiometry-container { font-family: Arial, sans-serif; }
              .stoichiometry-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
              .stoichiometry-table th, .stoichiometry-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
              .stoichiometry-table th { background-color: #f2f2f2; }
              .section { margin-bottom: 20px; }
              .error { color: red; }
            </style>
          `);
        },
        error: function(xhr, status, error) {
          $('#stoichiometry-dialog-content').html('<div class="error">Error: Could not retrieve stoichiometry data. ' + error + '</div>');
        }
      });
    }
  });

  // GET button - Retrieve stoichiometry
  editor.ui.registry.addButton('getStoichiometry', {
    tooltip: 'Get Stoichiometry (GET)',
    icon: 'g-letter',
    onAction: function () {
      // Get the selected chemical element
      const selectedNode = editor.selection.getNode();
      let chemId = 1; // Default to 1 as specified in the requirements
      
      // If a chemical element is selected, use its ID
      if ($(selectedNode).hasClass("chem")) {
        chemId = selectedNode.getAttribute("id");
      }
      
      // Create a dialog to display the stoichiometry information
      const dialogConfig = {
        title: 'Get Stoichiometry Information (GET)',
        body: {
          type: 'panel',
          items: [
            {
              type: 'htmlpanel',
              html: '<div id="get-stoichiometry-dialog-content">Loading stoichiometry data...</div>'
            }
          ]
        },
        buttons: [
          {
            type: 'cancel',
            text: 'Close'
          }
        ],
        width: 600,
        height: 400
      };
      
      // Open the dialog
      const dialog = editor.windowManager.open(dialogConfig);
      
      // Make the GET request to get stoichiometry data
      $.ajax({
        url: '/chemical/stoichiometry',
        type: 'GET',
        data: { chemId: "1" },
        success: function(response) {
          if (response.error) {
            $('#get-stoichiometry-dialog-content').html('<div class="error">Error: ' + response.error + '</div>');
            return;
          }
          
          // Format the response data
          let html = '<div class="stoichiometry-container">';
          
          if (response.data) {
            const stoichiometry = response.data;
            console.dir(stoichiometry)
            // Add header information
            html += '<h3>Stoichiometry Information (GET)</h3>';
            
            // Add molecules section
            if (stoichiometry.molecules && stoichiometry.molecules.length > 0) {
              html += '<div class="section"><h4>Molecules</h4><table class="stoichiometry-table">';
              html += '<tr><th>Compound</th><th>Role</th><th>Coefficient</th><th>Molecular Mass</th><th>Absolute Mass</th></tr>';
              
              stoichiometry.molecules.forEach(function(molecule) {
                html += '<tr>';
                html += '<td>' + (molecule.compound || '') + '</td>';
                html += '<td>' + (molecule.role || '') + '</td>';
                html += '<td>' + (molecule.coefficient || '') + '</td>';
                html += '<td>' + (molecule.molecularMass || '') + '</td>';
                html += '<td>' + (molecule.absoluteMass || '') + '</td>';
                html += '</tr>';
              });
              
              html += '</table></div>';
            }
          }
          
          html += '</div>';
          
          // Update the dialog content
          $('#get-stoichiometry-dialog-content').html(html);
          
          // Add some basic styling
          $('#get-stoichiometry-dialog-content').append(`
            <style>
              .stoichiometry-container { font-family: Arial, sans-serif; }
              .stoichiometry-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
              .stoichiometry-table th, .stoichiometry-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
              .stoichiometry-table th { background-color: #f2f2f2; }
              .section { margin-bottom: 20px; }
              .error { color: red; }
            </style>
          `);
        },
        error: function(xhr, status, error) {
          $('#get-stoichiometry-dialog-content').html('<div class="error">Error: Could not retrieve stoichiometry data. ' + error + '</div>');
        }
      });
    }
  });

  // Add commands for both buttons
  editor.addCommand("cmdStoichiometry", function () {
    editor.execCommand("stoichiometry");
  });
  
  editor.addCommand("cmdGetStoichiometry", function () {
    editor.execCommand("getStoichiometry");
  });

  // Add menu items for both buttons
  editor.ui.registry.addMenuItem('stoichiometryMenuItem', {
    text: 'Save Stoichiometry (POST)',
    tooltip: 'Save Stoichiometry (POST)',
    icon: 'save',
    onAction: function () {
      editor.execCommand("cmdStoichiometry");
    }
  });
  
  editor.ui.registry.addMenuItem('getStoichiometryMenuItem', {
    text: 'Get Stoichiometry (GET)',
    tooltip: 'Get Stoichiometry (GET)',
    icon: 'g-letter',
    onAction: function () {
      editor.execCommand("cmdGetStoichiometry");
    }
  });

  // Add to insertActions map
  if(!window.insertActions) window.insertActions = new Map();
  
  window.insertActions.set("stoichiometryMenuItem", {
    text: 'Save Stoichiometry (POST)',
    icon: 'save',
    action: () => {
      editor.execCommand("cmdStoichiometry");
    },
  });
  
  window.insertActions.set("getStoichiometryMenuItem", {
    text: 'Get Stoichiometry (GET)',
    icon: 'g-letter',
    action: () => {
      editor.execCommand("cmdGetStoichiometry");
    },
  });
});