/**
 * Dropbox plugin
 * Author: Dave
 * Date : 16/11/2014
 */

function importFromOwnCloudToTinyMCE(selectedNodes, ownCloudURL, ownCloudServerName) {
	selectedNodes.forEach(function (selectedNode) {
		var filename = selectedNode.title;
		var encodedPath = encodeURIComponent(selectedNode.data.path);
		var url = "/owncloud/redirectLink?path=" + encodedPath;

		var iconPath;
		if (selectedNode.folder) {
			iconPath = "/images/icons/folder.png";
		} else {
			var extension = RS.getFileExtension(filename);
			var iconPath = RS.getIconPathForExtension(extension);
		}

		var linkHash = hashCode = url.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);

		var badgeIconPath = '/images/icons/ownCloud_logo_50.png';
		if (ownCloudServerName.toUpperCase() == "SWITCHDRIVE") {
			badgeIconPath = '/images/icons/switchdrive.png';
		} else if (ownCloudServerName.toUpperCase() == "SURFDRIVE") {
			badgeIconPath = '/images/icons/surfdrive.png';
		}

		var json = {
			id: 'owncloud-' + filename + '-' + linkHash,
			fileStore: 'owncloud',
			recordURL: url,
			name: filename,
			iconPath: iconPath,
			badgeIconPath: badgeIconPath
		};

		RS.insertTemplateIntoTinyMCE('insertedExternalDocumentTemplate', json);
	});
}

tinymce.PluginManager.add('owncloud', function (editor, url) {
	if (initTinyMCE_cachedPropertiesResponse) {
		console.log('using cached deploymentproperties/ajax/properties response');
		propertiesRequest = $.Deferred()
		propertiesRequest.resolve(initTinyMCE_cachedPropertiesResponse);
	} else {
		propertiesRequest = $.get("/deploymentproperties/ajax/properties");
	}

	$.when(propertiesRequest).then(function (propertiesResponse) {
		var properties = propertiesResponse[0];

		var ownCloudURL = properties["owncloud.url"];
		var ownCloudServerName = properties["owncloud.server.name"];
		var ownCloudAuthType = properties["owncloud.auth.type"];

		// Add command to open the comment dialog.htm
		editor.addCommand('cmdOwnCloud', function () {
			authenticateOwnCloud(importFromOwnCloudToTinyMCE, "Choose", true, ownCloudURL, ownCloudServerName, ownCloudAuthType);
		});

		if (ownCloudServerName.toUpperCase() == "SWITCHDRIVE") {
			iconPath = '/img/switchdrive.png';
		} else if (ownCloudServerName.toUpperCase() == "SURFDRIVE") {
			iconPath = '/img/surfdrive.png';
		}

		// Add a button that opens a window
		editor.ui.registry.addButton('owncloud', {
			icon: 'owncloud',
			tooltip: 'Insert from ' + ownCloudServerName,
			onAction: function () { editor.execCommand("cmdOwnCloud"); }
		});

		// Adds a menu item to the insert menu
		editor.ui.registry.addMenuItem('optOwnCloud', {
			text: 'From ' + ownCloudServerName,
			icon: 'owncloud',
			onAction: function () { editor.execCommand("cmdOwnCloud"); },
		});

    // Adds a menu item to the slash menu
    if(!window.insertActions) window.insertActions = new Map();
    window.insertActions.set("optOwnCloud", {
      text: 'From ' + ownCloudServerName,
      icon: 'owncloud',
      action: () => {
        editor.execCommand("cmdOwnCloud");
      },
    });

	})
});
