/**
 * OneDrive plugin 
 * Author: Dave 
 * Date : 16/11/2014
 */

//var APP_CLIENT_ID = '000000004414D3C3';
//var REDIRECT_URL = 'http://rspacetest.com:8080/oneDrive/redirect';

tinymce.PluginManager.add('onedrive', function (editor, url) {

	// Add command to open the comment dialog.htm
	editor.addCommand('cmdOneDrive', function () {
		chooseOneDriveFile(editor, url);
	});

	editor.ui.registry.addButton('onedrive', {
		icon: 'one_drive',
		tooltip: 'Insert from OneDrive',
		onAction: function () {
			editor.execCommand("cmdOneDrive");
		}
	});

	editor.ui.registry.addMenuItem('optOneDrive', {
		text: 'From OneDrive',
		icon: 'one_drive',
		onAction: function () {
			editor.execCommand("cmdOneDrive");
		}
	});

  if(!window.insertActions) window.insertActions = new Map();
  window.insertActions.set("optOneDrive", {
    text: 'From OneDrive',
    icon: 'one_drive',
    action: () => {
			editor.execCommand("cmdOneDrive");
    },
  });

});

function chooseOneDriveFile(editor, url) {
	if (typeof OneDrive === 'function') {
		doOneDrive(editor, url);
	} else {
		apprise('Unable to contact OneDrive.  Please try again later or ensure that your network connection is active and reload the page.');
	}
}

function doOneDrive(editor, url) {

	var pickerOptions = {
		action: "share",
		success: function (files) {
			// Handle returned file object(s)
			for (var i = 0; i < files.value.length; i++) {
				var fileName = files.value[i].name;
				var link = files.value[i].webUrl;
				var extension = RS.getFileExtension(fileName);
				var iconPath = RS.getIconPathForExtension(extension);
				// Since OneDrive does not return a unique id, we'll hash the link and append it to the name. 
				var linkHash = hashCode = link.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);

				var json = {
					id: 'onedrive-' + fileName + '-' + linkHash,
					fileStore: 'onedrive',
					recordURL: link,
					name: fileName,
					iconPath: iconPath,
					badgeIconPath: '/images/icons/onedrive_icon.png'
				};

				RS.insertTemplateIntoTinyMCE('insertedExternalDocumentTemplate', json);
			}
		},
		multiSelect: true
	};

	openOneDriveFilePicker(pickerOptions);
}
