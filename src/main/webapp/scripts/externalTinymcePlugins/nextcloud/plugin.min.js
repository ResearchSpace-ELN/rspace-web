/**
 * Copied from nextcloud plugin.min.js, this also uses the nextcloud.js library code as a bower dependency
 */

function importFromNextCloudToTinyMCE(selectedNodes, nextCloudURL, nextCloudServerName) {
	selectedNodes.forEach(function (selectedNode) {
		var filename = selectedNode.title;
		var encodedPath = encodeURIComponent(selectedNode.data.path);
		var url = "/nextcloud/redirectLink?path=" + encodedPath;

		var iconPath;
		if (selectedNode.folder) {
			iconPath = "/images/icons/folder.png";
		} else {
			var extension = RS.getFileExtension(filename);
			var iconPath = RS.getIconPathForExtension(extension);
		}

		var linkHash = hashCode = url.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);

		var badgeIconPath = '/images/icons/nextcloud.png';

		var json = {
			id: 'nextcloud-' + filename + '-' + linkHash,
			fileStore: 'nextcloud',
			recordURL: url,
			name: filename,
			iconPath: iconPath,
			badgeIconPath: badgeIconPath
		};

		RS.insertTemplateIntoTinyMCE('insertedExternalDocumentTemplate', json);
	});
}

tinymce.PluginManager.add('nextcloud', function (editor, url) {
	if (initTinyMCE_cachedPropertiesResponse) {
		console.log('using cached deploymentproperties/ajax/properties response');
		propertiesRequest = $.Deferred()
		propertiesRequest.resolve(initTinyMCE_cachedPropertiesResponse);
	} else {
		propertiesRequest = $.get("/deploymentproperties/ajax/properties");
	}

	$.when(propertiesRequest).then(function (propertiesResponse) {
		var properties = propertiesResponse[0];

		var nextCloudURL = properties["nextcloud.url"];
		var nextCloudServerName = properties["nextcloud.server.name"];
		var nextCloudAuthType = properties["nextcloud.auth.type"];

		// Add command to open the comment dialog.htm
		editor.addCommand('cmdNextCloud', function () {
			authenticateNextCloud(importFromNextCloudToTinyMCE, "Choose", true, nextCloudURL, nextCloudServerName, nextCloudAuthType);
		});

		// if (nextCloudServerName.toUpperCase() == "SWITCHDRIVE") {
		// 	iconPath = '/img/switchdrive.png';
		// } else if (nextCloudServerName.toUpperCase() == "SURFDRIVE") {
		// 	iconPath = '/img/surfdrive.png';
		// }

		// Add a button that opens a window
		editor.ui.registry.addButton('nextcloud', {
			icon: 'nextcloud',
			tooltip: 'Insert from ' + nextCloudServerName,
			onAction: function () { editor.execCommand("cmdNextCloud"); }
		});

		// Adds a menu item to the insert menu
		editor.ui.registry.addMenuItem('optNextCloud', {
			text: 'From ' + nextCloudServerName,
			icon: 'nextcloud',
			onAction: function () { editor.execCommand("cmdNextCloud"); },
		});

    if(!window.insertActions) window.insertActions = new Map();
    window.insertActions.set("optNextCloud", {
      text: 'From ' + nextCloudServerName,
      icon: 'nextcloud',
      action: () => {
        editor.execCommand("cmdNextCloud");
      },
    });

	})
});
