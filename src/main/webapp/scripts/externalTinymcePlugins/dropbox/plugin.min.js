/**
 * Dropbox plugin
 * Author: Dave
 * Date : 16/11/2014
 */

tinymce.PluginManager.add('dropbox', function (editor, url) {
  var options = {
    // Required. Called when a user selects an item in the Chooser.
    success: function (files) {
      var extension = RS.getFileExtension(files[0].name);
      var iconPath = RS.getIconPathForExtension(extension);

      // Since dropbox does not return a unique id, we'll hash the link and append it to the name. 
      var linkHash = hashCode = files[0].link.split("").reduce(function (a, b) { a = ((a << 5) - a) + b.charCodeAt(0); return a & a }, 0);

      var json = {
        id: 'dropbox-' + files[0].name + '-' + linkHash,
        fileStore: 'dropbox',
        recordURL: files[0].link,
        name: files[0].name,
        iconPath: iconPath,
        badgeIconPath: '/images/icons/dropbox.png'
      };

      RS.insertTemplateIntoTinyMCE('insertedExternalDocumentTemplate', json);
    },

    // Optional. "preview" (default) is a preview link to the document for sharing,
    // "direct" is an expiring link to download the contents of the file. For more
    // information about link types, see Link types below.
    //		    linkType: "preview", // or "direct"
    linkType: "preview",

    // Optional. A value of false (default) limits selection to a single file, while
    // true enables multiple file selection.
    multiselect: false, // or true

    // Optional. This is a list of file extensions. If specified, the user will
    // only be able to select files with these extensions. You may also specify
    // file types, such as "video" or "images" in the list. For more information,
    // see File types below. By default, all extensions are allowed.
    //		    extensions: ['.pdf', '.doc', '.docx'],
  };

  editor.addCommand('cmdDropbox', function () {
    if (typeof Dropbox === 'object') {
      Dropbox.appKey = 'fe4ktl7kwhho28d';
      Dropbox.choose(options);
    } else {
      editor.ui.registry.addButton('dropbox', {
        tooltip: 'Insert from Dropbox',
        icon: 'dropbox',
        onAction: function () { 
          apprise('Unable to contact Dropbox. Please try again later or ensure that your network connection is active and reload the page.'); 
        }
      });

      editor.ui.registry.addMenuItem('optDropbox', {
        text: 'From Dropbox',
        icon: 'dropbox',
        onAction: function () { 
          apprise('Unable to contact Dropbox.  Please try again later or ensure that your network connection is active and reload the page.'); 
        }
      });

      if(!window.insertActions) window.insertActions = new Map();
      window.insertActions.set("optDropbox", {
        text: 'From Dropbox',
        icon: 'dropbox',
        action: () => {
          apprise('Unable to contact Dropbox.  Please try again later or ensure that your network connection is active and reload the page.'); 
        },
      });
    }
  });

  editor.ui.registry.addButton('dropbox', {
    icon: 'dropbox',
    tooltip: 'Insert from Dropbox',
    onAction: function () { editor.execCommand("cmdDropbox"); },
  });

  editor.ui.registry.addMenuItem('optDropbox', {
    text: 'From Dropbox',
    icon: 'dropbox',
    onAction: function () { editor.execCommand("cmdDropbox"); },
  });

  if(!window.insertActions) window.insertActions = new Map();
  window.insertActions.set("optDropbox", {
    text: 'From Dropbox',
    icon: 'dropbox',
    action: () => {
      editor.execCommand("cmdDropbox");
    },
  });
});
